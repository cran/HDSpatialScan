// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fanova_cpp
arma::vec fanova_cpp(arma::mat data, arma::mat matrix_clusters);
RcppExport SEXP _HDSpatialScan_fanova_cpp(SEXP dataSEXP, SEXP matrix_clustersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type matrix_clusters(matrix_clustersSEXP);
    rcpp_result_gen = Rcpp::wrap(fanova_cpp(data, matrix_clusters));
    return rcpp_result_gen;
END_RCPP
}
// fmanova_cpp
List fmanova_cpp(List jeu, arma::mat matrice_clusters, arma::mat cst1, arma::mat cst2);
RcppExport SEXP _HDSpatialScan_fmanova_cpp(SEXP jeuSEXP, SEXP matrice_clustersSEXP, SEXP cst1SEXP, SEXP cst2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type jeu(jeuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type matrice_clusters(matrice_clustersSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cst1(cst1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cst2(cst2SEXP);
    rcpp_result_gen = Rcpp::wrap(fmanova_cpp(jeu, matrice_clusters, cst1, cst2));
    return rcpp_result_gen;
END_RCPP
}
// mwmw_opti_cpp
arma::vec mwmw_opti_cpp(arma::mat rank_data, arma::mat matrix_clusters);
RcppExport SEXP _HDSpatialScan_mwmw_opti_cpp(SEXP rank_dataSEXP, SEXP matrix_clustersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type rank_data(rank_dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type matrix_clusters(matrix_clustersSEXP);
    rcpp_result_gen = Rcpp::wrap(mwmw_opti_cpp(rank_data, matrix_clusters));
    return rcpp_result_gen;
END_RCPP
}
// pointwise_mtest_cpp
List pointwise_mtest_cpp(List data_transp, arma::mat matrix_clusters);
RcppExport SEXP _HDSpatialScan_pointwise_mtest_cpp(SEXP data_transpSEXP, SEXP matrix_clustersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type data_transp(data_transpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type matrix_clusters(matrix_clustersSEXP);
    rcpp_result_gen = Rcpp::wrap(pointwise_mtest_cpp(data_transp, matrix_clusters));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HDSpatialScan_fanova_cpp", (DL_FUNC) &_HDSpatialScan_fanova_cpp, 2},
    {"_HDSpatialScan_fmanova_cpp", (DL_FUNC) &_HDSpatialScan_fmanova_cpp, 4},
    {"_HDSpatialScan_mwmw_opti_cpp", (DL_FUNC) &_HDSpatialScan_mwmw_opti_cpp, 2},
    {"_HDSpatialScan_pointwise_mtest_cpp", (DL_FUNC) &_HDSpatialScan_pointwise_mtest_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_HDSpatialScan(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
